apiVersion: kubeflow.org/v1
kind: PyTorchJob
metadata:
  name: llm-training
spec:
  pytorchReplicaSpecs:
    Master:
      replicas: 1
      restartPolicy: OnFailure
      template:
        metadata: &metadata
          labels:
            app: llm-training
        spec:
          affinity: &affinity
          containers: &containers
          - command:
            - /bin/bash
            - -c
            - "pip install tensorboard && torchrun /etc/config/sft.py --config /etc/config/config.yaml"
            env:
            - name: HF_HOME
              value: /mnt/.cache
            - name: HF_TOKEN
              value: ""
            - name: TRITON_CACHE_DIR
              value: /tmp/.triton
            - name: TOKENIZERS_PARALLELISM
              value: "false"
            - name: PYTORCH_CUDA_ALLOC_CONF
              value: "expandable_segments:True"
            - name: NCCL_DEBUG
              value: INFO
            image: quay.io/modh/training:py311-cuda121-torch241
            imagePullPolicy: IfNotPresent
            name: pytorch
            resources:
              limits:
                cpu: "4"
                memory: 64Gi
                nvidia.com/gpu: "1"
              requests:
                cpu: "4"
                memory: 64Gi
                nvidia.com/gpu: "1"
            volumeMounts:
            - mountPath: /etc/config
              name: config
            - mountPath: /tmp
              name: tmp
            - mountPath: /mnt
              name: training-storage
          tolerations: &tolerations
          - key: nvidia.com/gpu
            operator: Exists
          volumes: &volumes
          - configMap:
              name: llm-training
            name: config
          - emptyDir: {}
            name: tmp
          - name: training-storage
            persistentVolumeClaim:
              claimName: training-storage
    Worker:
      replicas: 3
      restartPolicy: OnFailure
      template:
        metadata: *metadata
        spec:
          affinity: *affinity
          containers: *containers
          tolerations: *tolerations
          volumes: *volumes
